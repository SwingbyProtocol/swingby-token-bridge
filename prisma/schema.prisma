// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Network {
  ETHEREUM
  GOERLI
  BSC
  BSCT
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}

enum LockId {
  PAYMENTS_SCRIPT_ETHEREUM
  PAYMENTS_SCRIPT_GOERLI
  PAYMENTS_SCRIPT_BSC
  PAYMENTS_SCRIPT_BSCT
}

model Locks {
  id LockId   @id
  at DateTime
}

model LiquidityProvider {
  address String @id
}

model Deposit {
  network          Network
  hash             String
  transactionIndex Int            @db.SmallInt
  blockNumber      Decimal        @db.Decimal(65, 20)
  at               DateTime
  addressFrom      String
  addressTo        String
  value            Decimal        @db.Decimal(65, 20)
  addressContract  String
  tokenDecimals    Int            @db.SmallInt
  gas              Decimal        @db.Decimal(65, 20)
  gasPrice         Decimal        @db.Decimal(65, 20)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now()) @updatedAt
  payments         Payment[]      @relation("PaymentRelation")
  crashes          PaymentCrash[] @relation("PaymentCrashesRelation")

  @@id([network, hash])
  @@index([network, at])
  @@index([network, blockNumber])
  @@index([network, addressFrom])
  @@index([network, addressTo])
}

model Payment {
  network           Network
  hash              String
  signedTransaction String        @default("")
  status            PaymentStatus @default(PENDING)
  transactionIndex  Int?          @db.SmallInt
  blockNumber       Decimal?      @db.Decimal(65, 20)
  at                DateTime?
  addressFrom       String?
  addressTo         String?
  value             Decimal?      @db.Decimal(65, 20)
  addressContract   String?
  tokenDecimals     Int?          @db.SmallInt
  gas               Decimal?      @db.Decimal(65, 20)
  gasPrice          Decimal?      @db.Decimal(65, 20)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @default(now()) @updatedAt
  depositNetwork    Network
  depositHash       String
  deposit           Deposit       @relation("PaymentRelation", fields: [depositNetwork, depositHash], references: [network, hash])

  @@id([network, hash])
  @@index([network, at])
  @@index([network, blockNumber])
  @@index([network, addressFrom])
  @@index([network, addressTo])
  @@index([network, status])
  @@index([network, depositNetwork, depositHash])
}

enum PaymentCrashReason {
  UNKNOWN
  FEES_HIGHER_THAN_AMOUNT
}

model PaymentCrash {
  id             Int                @id @default(autoincrement())
  reason         PaymentCrashReason @default(UNKNOWN)
  depositNetwork Network
  depositHash    String
  deposit        Deposit            @relation("PaymentCrashesRelation", fields: [depositNetwork, depositHash], references: [network, hash])
}
